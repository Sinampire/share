{"./":{"url":"./","title":"简述","keywords":"","body":"CSS案例展示 —— 马铎 "},"section1/summary.html":{"url":"section1/summary.html","title":"写在前面","keywords":"","body":"关于 CSS 在 MDN 中 CSS 的定义： 层叠样式表 (Cascading Style Sheets，缩写为 CSS），是一种样式表语言，用来描述 HTML 或 XML（包括如 SVG、XHTML 之类的 XML 分支语言）文档的呈现。 CSS 描述了在屏幕、纸质、音频等其它媒体上的元素应该如何被渲染的问题。 通俗的 CSS 定义： 一门给予用户视觉上愉悦的“语言”，一门值得web开发者不断探索的语言。 原则 书写顺序 /* 遵照一定的顺序规则 */ 1.位置属性(position, top, right, z-index, display, float等) 2.大小(width, height, padding, margin) 3.文字系列(font, line-height, letter-spacing, color, text-align等) 4.背景(background, border等) 5.其他(animation, transition等) 减少重复代码 /* bad~bad~bad~ */ tips { color: #f4f0ea; border: 1px solid #f4f0ea; } tips:before { border-left-color: #f4f0ea; } /* good~good~good~ */ tips { color: #f4f0ea; border: 1px solid currentColor; } tips:before { border-left-color: inherit; } 合理使用简写 /* bad~bad~bad~ */ div { border-width: 10px 5px 10px 5px; } /* good~good~good~ */ div { border-width: 10px 5px; } 适当的过渡效果 /* bad~bad~bad~ */ input:not(:focus) + .popTips{ display: none; } input:focus + .popTips{ display: block; } /* good~good~good~ */ input:not(:focus) + .popTips{ transform: scale(0); transition: transform .25s cubic-bezier(.25, .1, .25, .1); } input:focus + .popTips{ transform: scale(1); transition: transform .4s cubic-bezier(.29, .15, .5, 1.46); } 色彩 为了保持文档中示例的一致性，文档中所有示例配色均参考使用 网易严选 设计规范。 "},"section1/refer.html":{"url":"section1/refer.html","title":"参考内容","keywords":"","body":"参考内容 文章 地址 You need to know css https://l-hammer.github.io/You-need-to-know-css/ MDN-CSS https://developer.mozilla.org/zh-CN/docs/Web/CSS Can i use https://caniuse.com/ CSS世界 https://pan.baidu.com/s/1Kig7jxp6huTVqAaEGTx3Sw 密码: ihkx "},"section2/":{"url":"section2/","title":"术语和概念","keywords":"","body":"尽管本书内容会用很轻松的方式表达，但还是避免不了会出现一些 CSS 领域的专业术语。 因此，在学习技术内容之前，我们需要先了解一下 CSS 世界里的一些专业术语。 "},"section2/perfessional-name.html":{"url":"section2/perfessional-name.html","title":"专业术语","keywords":"","body":"专业术语 .container { width: 100%; height: 1000px; color: transparent; } 1. 属性 属性对应的是平常我们书面或交谈时对 CSS 的中文称谓。例如，上面示意代码中的 height 和 color 就是属性。当我们说起“这个元素高度是100像素”，或者“这个文字颜色是透明色”时，这里提到的“高度”和“颜色”就是CSS的属性。 2. 值 “值”大多与数字挂钩。例如，上面的 1000px 就是典型的值。在 CSS 世界中，值的分类非常广泛，下面是一些常用的类型。• 整数值，如 z-index: 1 中的 1。• 数值，如 line-height: 1.5 中的 1.5。• 百分比值，如 padding: 50%中的 50%。• 长度值，如 width: 99px。• 颜色值，如 color: #999。 此外，还有字符串值、位置值等类型。在 CSS3 中，还有角度值、频率值、时间值 等类型，这里就不全部展示了。 3. 关键字 顾名思义，关键字指的是 CSS 里面很关键的单词,上面示例CSS代码中的transparent就是典型的关键字，还有常见的 solid、inherit 等都是关键字，其中 inherit 也称作“泛关键字”，所谓泛关键字，就是“所有CSS属性都可以使用的关键字”的意思。 4. 变量 CSS 中目前可以称为变量的比较有限，CSS3 中的 currentColor 就是变量，非常有用。currentColor顾名思意就是“当前颜色”，准确讲应该是“当前的标签所继承的文字颜色” .demo i.icon { display: inline-block; width: 16px; height: 20px; background-image: url(../image/sprite_icons.png) !important; background-color: currentColor; } .demo i.icon1 { background-position: 0 0; } .demo i.icon2 { background-position: -20px 0; } .demo i.icon3 { background-position: -40px 0; } .demo i.icon4 { background-position: -60px 0; } .demo .link { margin-right: 15px; color: #000;} 返回 刷新 收藏 展开图片 $('.demo-color input[name=\"color\"]').on('change', function() { $('.demo .link').css('color', $(this).val()); }) 5. 长度单位 CSS中的单位有时间单位(如 s、ms)，还有角度单位(如 deg、rad 等)，最常见的自然还是长度单位(如 px、em 等)需要注意的是，诸如 2% 后面的百分号%不是长度单位。因为 2% 就是一个完整的值，就是一个整体，可以理解为0.02，故2%也同样是值。如果继续细分，长度单位又可以分为相对长度单位和绝对长度单位。(1)相对长度单位————相对长度单位又分为相对字体长度单位和相对视区长度单 • 相对字体长度单位，如 em 和 ex，还有 CSS3 新世界的 rem 和 ch(字符 0 的宽度)。• 相对视区长度单位，如 vh、vw、vmin 和 vmax。(2)绝对长度单位————最常见的就是 px，还有 pt、cm、mm、pc 等。 6. 功能符 值以函数的形式指定(就是被括号括起来的那种)，主要用来表示颜色(rgba 和 hsla)、 背景图片地址(url)、元素属性值、计算(calc)和过渡效果等，如 rgba(0,0,0,.5)、 url('css-world.png')、attr('href')和 scale(-1)。 7. 属性值 属性冒号后面的所有内容统一称为属性值。例如，1px solid rgb(0,0,0)就可以称为属性值，它是由“值+关键字+功能符”构成的。属性值也可以由单一内容构成。例如，z-index:1 的 1 也是属性值。 8. 声明 属性名加上属性值就是声明，例如: color: transparent; 9. 声明块 声明块是花括号({})包裹的一系列声明，例如: { height: 99px; color: transparent; } 10. 规则或规则集 出现了选择器，而且后面还跟着声明块，比下这个例子，就是一个规则集: .container { height: 99px; color: transparent; } 11. 选择器 选择器是用来瞄准目标元素的东西，例如，上面的.container就是一个选择器。 类选择器: 指以“.”这个点号开头的选择器。很多元素可以应用同一个类选择器。“类”， 天生就是被公用的命。ID选择器: “#”打头，权重相当高。ID 一般指向唯一元素。但是，在 CSS 中，ID 样式出现在多个不同的元素上并不会只渲染第一个，而是雨露均沾。但显然不推荐 这么做。属性选择器: 指含有[]的选择器，形如[title]{}、[title= \"css-world\"]{}、 [title~=\"css-world\"]{} 、 [title^= \"css-world\"]{} 和 [title$=\"css- world\"]{}等。伪类选择器: 一般指前面有个英文冒号(:)的选择器，如:first-child 或:last- child 等。伪元素选择器: 就是有连续两个冒号的选择器，如::first-line::first- letter、::before 和::after。 12. 关系选择器 关系选择器是指根据与其他元素的关系选择元素的选择器。• 后代选择器:选择所有合乎规则的后代元素。空格连接。• 相邻后代选择器:仅仅选择合乎规则的儿子元素，孙子、重孙元素忽略，因此又称“子 选择器”。>连接。适用于 IE7 以上版本。• 兄弟选择器:选择当前元素后面的所有合乎规则的兄弟元素。~连接。适用于 IE7 以上 版本。• 相邻兄弟选择器:仅仅选择当前元素相邻的那个合乎规则的兄弟元素。+连接。适用于 IE7 以上版本。 13. @规则 @规则指的是以@字符开始的一些规则，像@media、@font-face、@page 或者@support， 诸如此类。 "},"section2/undefined-behavior.html":{"url":"section2/undefined-behavior.html","title":"未定义行为","keywords":"","body":"未定义行为 当某个浏览器中出现与其他浏览器不一样的行为或样式表现的时候，我们总会习惯把这种不一样的表现认为是浏览器的bug。Web 应用场景千变万化，Web 标准也是不可能面面俱到的，也会存在规范描述以外的场景，此时，各大浏览器厂家只能根据自己的理解与喜好去实现，一旦个性化就会出现差异，就会被理解为遇到bug。实际上，这并不能被称作bug，用计算机领域的专业术语描述应该是“未定义行为”(undefined behavior)。 下面我们来看一个“未定义行为”的例子。 CSS中有很多伪类，其中一个比较常用的就是:active，在 IE8 及以上版本的浏览器行为表现非常统一，鼠标按下，执行:active 伪类对应的CSS样式，鼠标抬起还原。通用情况下，:active的表现都是符合预期的，但当遭遇其他一些处理的时候，表现结果就会变得不一样。 点我查看Demo 这里，Firefox 和 IE/Chrome 浏览器表现不一样，这是 Firefox 浏览器的 bug ? 这可不是bug，而是因为规范上并没有对这种场景的具体描述， 所以 Firefox 认为:active 发生在mousedown事件之后, 像这种规范顾及不到的细枝末节的实现，就称为“未定义行为”。 "}}