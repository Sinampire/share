{"./":{"url":"./","title":"简述","keywords":"","body":"CSS案例展示 —— 马铎 "},"section1/summary.html":{"url":"section1/summary.html","title":"写在前面","keywords":"","body":"关于 CSS 在 MDN 中 CSS 的定义： 层叠样式表 (Cascading Style Sheets，缩写为 CSS），是一种样式表语言，用来描述 HTML 或 XML（包括如 SVG、XHTML 之类的 XML 分支语言）文档的呈现。 CSS 描述了在屏幕、纸质、音频等其它媒体上的元素应该如何被渲染的问题。 通俗的 CSS 定义： 一门给予用户视觉上愉悦的“语言”，一门值得web开发者不断探索的语言。 原则 书写顺序 /* 遵照一定的顺序规则 */ 1.位置属性(position, top, right, z-index, display, float等) 2.大小(width, height, padding, margin) 3.文字系列(font, line-height, letter-spacing, color, text-align等) 4.背景(background, border等) 5.其他(animation, transition等) 减少重复代码 /* bad~bad~bad~ */ tips { color: #f4f0ea; border: 1px solid #f4f0ea; } tips:before { border-left-color: #f4f0ea; } /* good~good~good~ */ tips { color: #f4f0ea; border: 1px solid currentColor; } tips:before { border-left-color: inherit; } 合理使用简写 /* bad~bad~bad~ */ div { border-width: 10px 5px 10px 5px; } /* good~good~good~ */ div { border-width: 10px 5px; } 适当的过渡效果 /* bad~bad~bad~ */ input:not(:focus) + .popTips{ display: none; } input:focus + .popTips{ display: block; } /* good~good~good~ */ input:not(:focus) + .popTips{ transform: scale(0); transition: transform .25s cubic-bezier(.25, .1, .25, .1); } input:focus + .popTips{ transform: scale(1); transition: transform .4s cubic-bezier(.29, .15, .5, 1.46); } 色彩 为了保持文档中示例的一致性，文档中所有示例配色均参考使用 网易严选 设计规范。 "},"section1/refer.html":{"url":"section1/refer.html","title":"参考内容","keywords":"","body":"参考内容 文章 地址 You need to know css https://l-hammer.github.io/You-need-to-know-css/ MDN-CSS https://developer.mozilla.org/zh-CN/docs/Web/CSS Can i use https://caniuse.com/ CSS世界 https://pan.baidu.com/s/1Kig7jxp6huTVqAaEGTx3Sw 密码: ihkx "},"section2/perfessional-name.html":{"url":"section2/perfessional-name.html","title":"专业术语","keywords":"","body":"专业术语 .container { width: 100%; height: 1000px; color: transparent; } 1. 属性 属性对应的是平常我们书面或交谈时对 CSS 的中文称谓。例如，上面示意代码中的 height 和 color 就是属性。当我们说起“这个元素高度是100像素”，或者“这个文字颜色是透明色”时，这里提到的“高度”和“颜色”就是CSS的属性。 2. 值 “值”大多与数字挂钩。例如，上面的 1000px 就是典型的值。在 CSS 世界中，值的分类非常广泛，下面是一些常用的类型。• 整数值，如 z-index: 1 中的 1。• 数值，如 line-height: 1.5 中的 1.5。• 百分比值，如 padding: 50%中的 50%。• 长度值，如 width: 99px。• 颜色值，如 color: #999。 此外，还有字符串值、位置值等类型。在 CSS3 中，还有角度值、频率值、时间值 等类型，这里就不全部展示了。 3. 关键字 顾名思义，关键字指的是 CSS 里面很关键的单词,上面示例CSS代码中的transparent就是典型的关键字，还有常见的 solid、inherit 等都是关键字，其中 inherit 也称作“泛关键字”，所谓泛关键字，就是“所有CSS属性都可以使用的关键字”的意思。 4. 变量 CSS 中目前可以称为变量的比较有限，CSS3 中的 currentColor 就是变量，非常有用。currentColor顾名思意就是“当前颜色”，准确讲应该是“当前的标签所继承的文字颜色” .demo i.icon { display: inline-block; width: 16px; height: 20px; background-image: url(../image/sprite_icons.png) !important; background-color: currentColor; } .demo i.icon1 { background-position: 0 0; } .demo i.icon2 { background-position: -20px 0; } .demo i.icon3 { background-position: -40px 0; } .demo i.icon4 { background-position: -60px 0; } .demo .link { margin-right: 15px; color: #000;} 返回 刷新 收藏 展开图片 $('.demo-color input[name=\"color\"]').on('change', function() { $('.demo .link').css('color', $(this).val()); }) 5. 长度单位 CSS中的单位有时间单位(如 s、ms)，还有角度单位(如 deg、rad 等)，最常见的自然还是长度单位(如 px、em 等)需要注意的是，诸如 2% 后面的百分号%不是长度单位。因为 2% 就是一个完整的值，就是一个整体，可以理解为0.02，故2%也同样是值。如果继续细分，长度单位又可以分为相对长度单位和绝对长度单位。(1)相对长度单位————相对长度单位又分为相对字体长度单位和相对视区长度单 • 相对字体长度单位，如 em 和 ex，还有 CSS3 新世界的 rem 和 ch(字符 0 的宽度)。• 相对视区长度单位，如 vh、vw、vmin 和 vmax。(2)绝对长度单位————最常见的就是 px，还有 pt、cm、mm、pc 等。 6. 功能符 值以函数的形式指定(就是被括号括起来的那种)，主要用来表示颜色(rgba 和 hsla)、 背景图片地址(url)、元素属性值、计算(calc)和过渡效果等，如 rgba(0,0,0,.5)、 url('css-world.png')、attr('href')和 scale(-1)。 7. 属性值 属性冒号后面的所有内容统一称为属性值。例如，1px solid rgb(0,0,0)就可以称为属性值，它是由“值+关键字+功能符”构成的。属性值也可以由单一内容构成。例如，z-index:1 的 1 也是属性值。 8. 声明 属性名加上属性值就是声明，例如: color: transparent; 9. 声明块 声明块是花括号({})包裹的一系列声明，例如: { height: 99px; color: transparent; } 10. 规则或规则集 出现了选择器，而且后面还跟着声明块，比下这个例子，就是一个规则集: .container { height: 99px; color: transparent; } 11. 选择器 选择器是用来瞄准目标元素的东西，例如，上面的.container就是一个选择器。 类选择器: 指以“.”这个点号开头的选择器。很多元素可以应用同一个类选择器。“类”， 天生就是被公用的命。ID选择器: “#”打头，权重相当高。ID 一般指向唯一元素。但是，在 CSS 中，ID 样式出现在多个不同的元素上并不会只渲染第一个，而是雨露均沾。但显然不推荐 这么做。属性选择器: 指含有[]的选择器，形如[title]{}、[title= \"css-world\"]{}、 [title~=\"css-world\"]{} 、 [title^= \"css-world\"]{} 和 [title$=\"css- world\"]{}等。伪类选择器: 一般指前面有个英文冒号(:)的选择器，如:first-child 或:last- child 等。伪元素选择器: 就是有连续两个冒号的选择器，如::first-line::first- letter、::before 和::after。 12. 关系选择器 关系选择器是指根据与其他元素的关系选择元素的选择器。• 后代选择器:选择所有合乎规则的后代元素。空格连接。• 相邻后代选择器:仅仅选择合乎规则的儿子元素，孙子、重孙元素忽略，因此又称“子 选择器”。>连接。适用于 IE7 以上版本。• 兄弟选择器:选择当前元素后面的所有合乎规则的兄弟元素。~连接。适用于 IE7 以上 版本。• 相邻兄弟选择器:仅仅选择当前元素相邻的那个合乎规则的兄弟元素。+连接。适用于 IE7 以上版本。 13. @规则 @规则指的是以@字符开始的一些规则，像@media、@font-face、@page 或者@support， 诸如此类。 "},"section2/undefined-behavior.html":{"url":"section2/undefined-behavior.html","title":"未定义行为","keywords":"","body":"未定义行为 当某个浏览器中出现与其他浏览器不一样的行为或样式表现的时候，我们总会习惯把这种不一样的表现认为是浏览器的bug。Web 应用场景千变万化，Web 标准也是不可能面面俱到的，也会存在规范描述以外的场景，此时，各大浏览器厂家只能根据自己的理解与喜好去实现，一旦个性化就会出现差异，就会被理解为遇到bug。实际上，这并不能被称作bug，用计算机领域的专业术语描述应该是“未定义行为”(undefined behavior)。 下面我们来看一个“未定义行为”的例子。 CSS中有很多伪类，其中一个比较常用的就是:active，在 IE8 及以上版本的浏览器行为表现非常统一，鼠标按下，执行:active 伪类对应的CSS样式，鼠标抬起还原。通用情况下，:active的表现都是符合预期的，但当遭遇其他一些处理的时候，表现结果就会变得不一样。 点我查看Demo 这里，Firefox 和 IE/Chrome 浏览器表现不一样，这是 Firefox 浏览器的 bug ? 这可不是bug，而是因为规范上并没有对这种场景的具体描述， 所以 Firefox 认为:active 发生在mousedown事件之后, 像这种规范顾及不到的细枝末节的实现，就称为“未定义行为”。 "},"section3/translucent-borders.html":{"url":"section3/translucent-borders.html","title":"半透明边框","keywords":"","body":"半透明边框 背景知识: background-clip 默认情况下，背景的颜色会延伸至边框下层，这意味着我们设置的透明边框效果会被覆盖掉，在css3中，我们可以通过设置background-clip:padding-box来改变背景的默认行为，达到我们想要的效果。 #demo{ width: 100%; padding: 60px 80px 80px; background: #b4a078; } #demo div{ padding: 12px; margin: 20px auto; background: white; border: 10px solid hsla(0, 0%, 100%, .5); } #demo p{ color: #f4f0ea; } #demo div.padding-box{ background-clip: padding-box; } #demo div.border-box{ background-clip: border-box; } padding-box 一段文字，吧啦吧啦吧啦。 border-box 一段文字，吧啦吧啦吧啦。 浏览器支持 "},"section3/multiple-borders.html":{"url":"section3/multiple-borders.html","title":"多重边框","keywords":"","body":"多重边框 背景知识: box-shadow, outline,outline-offset box-shadow用来给元素添加各种阴影效果(一个或多个)。参数:inset | offset-x | offset-y | blur-radius | spread-radius | color其中spread-radius阴影扩张半径，当只设置扩张半径时，零偏移，零模糊，产生的效果其实相当于一条实线“边框” div { width: 60px; height: 60px; margin: 120px auto; border-radius: 50%; background: #fafafa; box-shadow: 0 0 0 15px #E8E2D6, 0 0 0 30px #E1D9C9, 0 0 0 45px #D9CFBB, 0 0 0 60px #D2C6AE, 0 0 0 75px #CABCA0, 0 0 0 90px #C3B393; } box-shadow只能模拟实线边框效果，某些情况下，我们可能需要生成虚线的边框效果，我们可以通过类似于border的描边outline和对应的描边偏移outline-offset来实现。 div { width: 200px; height: 120px; margin: 0 auto; background: #efebe9; border: 5px solid #B4A078; outline: #B4A078 dashed 1px; outline-offset: -10px; } .demo1, .demo2 { width: 100%; } .demo1 div { width: 60px; height: 60px; margin: 120px auto; border-radius: 50%; background: #fafafa; box-shadow: 0 0 0 15px #E8E2D6, 0 0 0 30px #E1D9C9, 0 0 0 45px #D9CFBB, 0 0 0 60px #D2C6AE, 0 0 0 75px #CABCA0, 0 0 0 90px #C3B393; } .demo2 div { width: 200px; height: 120px; margin: 0 auto; background: #efebe9; border: 5px solid #B4A078; outline: #B4A078 dashed 1px; outline-offset: -10px; } 浏览器支持 "},"section3/inner-rounding.html":{"url":"section3/inner-rounding.html","title":"边框内圆角","keywords":"","body":"边框内圆角 背景知识: box-shadow, outline box-shadow是会紧贴border-radius圆角边的，但是，描边outline并不会与圆角边border-radius贴合，我们可以将两者组合，通过box-shadow去填补描边outline所产生的间隙来达到我们想要的效果。 #demo { width: 100%; padding: 60px 80px 80px; } #demo div{ width: 300px; margin: 30px auto; padding: 8px 16px; border-radius: 8px; background: #f4f0ea; outline: 10px solid #b4a078; } #demo input{ margin-left: calc(50% - 45px); } #demo input:checked ~ div{ box-shadow: 0 0 0 4px #b4a078; } box-shadow A paragraph of filler text. La la la de dah de dah de dah de la. 关于扩张半径的取值？假设圆角border-radius的半径为r,根据勾股定理，扩张半径的最小值应等于(√2−1)r。 浏览器支持 "},"section3/stripes-background.html":{"url":"section3/stripes-background.html","title":"条纹背景","keywords":"","body":"条纹背景 背景知识: gradient, linear-gradient, radial-gradient, repeating-linear-gradient 线性渐变linear-gradient是CSS3非常重要的一个模块，但在真实的开发中，我们并不常用，在这里，我举两个自己经常会用到的场景，分别是进度条和不规则卡片。 进度条 #demo1 { width: 100%; padding: 80px 0px; display: flex; flex-wrap: wrap; justify-content: space-around; } #demo1 .progress-outer { width: 60%; height: 12px; border-radius: 8px; overflow: hidden; position: relative; } #demo1 .progress-enter { height: inherit; background: rgba(180, 160, 120, .2); } #demo1 .progress-bg { width: 60%; height: inherit; border-radius: 6px; background: repeating-linear-gradient(-45deg, #D9CFBB 25%, #C3B393 0, #C3B393 50%, #D9CFBB 0, #D9CFBB 75%, #C3B393 0); background-size: 16px 16px; animation: panoramic 3s linear infinite; } @keyframes panoramic { 0% {background-position: 0px;} 100% {background-position: 50px;} } 不规则卡片 卡片顶部凹进来的弧形我们可以通过径向渐变radial-gradient来实现 #demo2 { width: 100%; padding: 60px 0px; display: flex; flex-wrap: wrap; justify-content: space-around; } #demo2 .coupon-card { width: 200px; height: 120px; background-image: radial-gradient(circle at 100px -8px, transparent 20px, #b4a078 21px); } 浏览器支持 "},"section4/ellipse.html":{"url":"section4/ellipse.html","title":"圆与椭圆","keywords":"","body":"圆与椭圆 背景知识: border-radius 通常我们一般使用border-radius来时实现圆角效果， 其中border-radius可以单独指定它的半长轴和半短轴，只需要用“/”分割即可。 我们可以通过这个属性轻松实现半圆、半椭圆、四分之一圆及四分之一圆等常见的图形。 #demo { width: 100%; padding: 60px 0; display: flex; flex-wrap: wrap; justify-content: space-around; } #demo div{ width: 200px; height: 150px; background: #b4a078; margin-bottom: 30px; } .ellipse:nth-of-type(1){ width: 300px; height: 150px; border-radius: 50% / 100% 100% 0 0; } .ellipse:nth-of-type(2){ width: 150px; height: 150px; border-radius: 100% 0 0 0; } .ellipse:nth-of-type(3){ border-radius: 50% / 100% 100% 0 0; } .ellipse:nth-of-type(4){ width: 100px; border-radius: 100% 0 0 0; } .ellipse:nth-of-type(5){ width: 300px; border-radius: 50% / 0 100%; } .ellipse:nth-of-type(6){ width: 300px; border-radius: 50% / 100% 0; } .ellipse:nth-of-type(1){ width: 300px; height: 150px; border-radius: 50% / 100% 100% 0 0; } .ellipse:nth-of-type(2){ width: 150px; height: 150px; border-radius: 100% 0 0 0; } .ellipse:nth-of-type(3){ border-radius: 50% / 100% 100% 0 0; } .ellipse:nth-of-type(4){ width: 100px; border-radius: 100% 0 0 0; } .ellipse:nth-of-type(5){ width: 300px; border-radius: 50% / 0 100%; } .ellipse:nth-of-type(6){ width: 300px; border-radius: 50% / 100% 0; } 浏览器支持 "},"section4/parallelogram.html":{"url":"section4/parallelogram.html","title":"parallel四边形","keywords":"","body":"parallel四边形 背景知识: transform, clip-path 某些情况下，为了避免标签嵌套过多，我们使用伪元素给元素增加背景、边框等样式会方便很多。比如下方的这张图，需要文字左对齐，划过时每一项背景的内边距padding相同: #demo1{ width: 100%; padding: 29px 0 0; } .diamond{ display: flex; flex-wrap: wrap; justify-content: space-around; padding-bottom: 20px; margin-bottom: 20px; border-bottom: 1px solid #eee; } .diamond > div{ width: 150px; color: white; display: inherit; justify-content: center; align-items: center; position: relative; } .diamond:nth-of-type(1) > div{ transform: skewX(-45deg); background: #b4a078; } .diamond:nth-of-type(1) > div > span{ transform: skewX(45deg); } .diamond:nth-of-type(2) > div::before{ content: \"\"; position: absolute; top: 0; left: 0; bottom: 0; right: 0; z-index: -1; transform: skewX(-45deg); background: #b4a078; } .diamond:nth-of-type(3) > div{ width: 105px; height: 105px; border: 29px solid transparent; box-sizing: content-box; } .diamond:nth-of-type(3) > div::before{ content: \"\"; position: absolute; top: 0; left: 0; bottom: 0; right: 0; z-index: -1; background: #b4a078; transform: rotate(45deg); } .diamond:nth-of-type(3){ margin-bottom: 0; align-items: center; justify-content: space-around; border-bottom-color: transparent; } .diamond:nth-of-type(3) > img{ width: 300px; height: 150px; clip-path: polygon(50% 0, 100% 50%, 50% 100%, 0 50%); transition: 1s clip-path; } .diamond:nth-of-type(3) > img:hover{ clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%); } ① 嵌套元素 diamond ② 伪元素(推荐) diamond diamond 浏览器支持 "},"section4/bevel-corners.html":{"url":"section4/bevel-corners.html","title":"切角效果","keywords":"","body":"切角效果 背景知识: gradient, clip-path #demo{ width: 100%; padding: 60px 0; } .bevel-corners{ display: flex; flex-wrap: wrap; justify-content: space-around; align-items: center; flex-wrap: wrap; margin-bottom: 20px; } .bevel-corners > div{ width: 249px; color: #FFF; padding: 1.2em 1.8em; hyphens: auto; text-align: justify; background: #b4a078; } .bevel-corners > p{ width: 116px;; } .bevel-corners:nth-of-type(1) > div{ background: linear-gradient(45deg, transparent 12px, #b4a078 13px) bottom left, linear-gradient(135deg, transparent 12px, #b4a078 13px) top left, linear-gradient(-135deg, transparent 12px, #b4a078 13px) top right, linear-gradient(-45deg, transparent 12px, #b4a078 13px) bottom right; background-size: 51% 51%; background-repeat: no-repeat; } .bevel-corners:nth-of-type(2) > div{ background: radial-gradient(circle at bottom left, transparent 15px, #b4a078 16px) bottom left, radial-gradient(circle at top left, transparent 15px, #b4a078 16px) top left, radial-gradient(circle at top right, transparent 15px, #b4a078 16px) top right, radial-gradient(circle at bottom right, transparent 15px, #b4a078 16px) bottom right; background-size: 51% 51%; background-repeat: no-repeat; } .bevel-corners:nth-of-type(3) > div{ padding: 0 9px; border: 18px solid transparent; border-image: 1 url('data:image/svg+xml, '); background-clip: padding-box; } .bevel-corners:nth-of-type(4) > div{ clip-path: polygon(20px 0, calc(100% - 20px) 0, 100% 20px, 100% calc(100% - 20px), calc(100% - 20px) 100%, 20px 100%, 0 calc(100% - 20px), 0 20px); transition: 1s clip-path; } .bevel-corners:nth-of-type(4):hover > div{ clip-path: polygon(0 0, 0 0, 100% 0, 100% 0, 100% 100%, 100% 100%, 0 100%, 0 100%); } ① linear-gradient A paragraph of filler text.La la la de dah de dah de dah de la.La la la de dah de dah de dah de la.La la la de dah de dah de dah de la. ② radial-gradient A paragraph of filler text.La la la de dah de dah de dah de la.La la la de dah de dah de dah de la.La la la de dah de dah de dah de la. ③ 内联SVG A paragraph of filler text.La la la de dah de dah de dah de la.La la la de dah de dah de dah de la.La la la de dah de dah de dah de la. ④ clip-path A paragraph of filler text.La la la de dah de dah de dah de la.La la la de dah de dah de dah de la.La la la de dah de dah de dah de la. 浏览器支持 "},"section4/poptip.html":{"url":"section4/poptip.html","title":"提示气泡","keywords":"","body":"提示气泡 背景知识: transition, transform #demo { width: 100%; padding: 99px 69px; display: flex; flex-wrap: wrap; } .cell { width: calc(33.33333% - 8px); height: 52px; text-align: center; line-height: 52px; border-radius: 8px; background: #F7F5F1; cursor: pointer; position: relative; border-color: #b4a078; } .cell.empty { background: transparent; cursor: default; pointer-events: none; } .cell:not(:nth-of-type(3n)) { margin-right: 12px; margin-bottom: 12px; } .cell:hover { color: #b4a078; font-weight: 900; } .cell[class*=poptip--]::before, .cell[class*=poptip--]::after { visibility: hidden; opacity: 0; transform: translate3d(0,0,0); transition: all .3s ease .05s; } .cell[class*=poptip--]:hover::before, .cell[class*=poptip--]:hover::after { visibility: visible; opacity: 1; } .cell[class*=poptip--]::before { content: ''; position: absolute; width: 0; height: 0; border: 6px solid transparent; } .cell[class*=poptip--]::after { content: attr(aria-controls); position: absolute; background: #b4a078; font-size: 12px; font-weight: normal; color: white; line-height: 12px; padding: 6px 12px; white-space: nowrap; border-radius: 2px; box-shadow: 0px 0px 3px #b4a078; } .cell[class*=poptip--top]::before { border-top-color: inherit; } .cell[class*=poptip--right]::before { border-right-color: inherit; } .cell[class*=poptip--bottom]::before { border-bottom-color: inherit; } .cell[class*=poptip--left]::before { border-left-color: inherit; } /* top && bottom */ .cell[class*=poptip--top]::before, .cell[class*=poptip--bottom]::before { left: calc(50% - 6px); } .cell[class*=poptip--top]::after, .cell[class*=poptip--bottom]::after { left: 50%; transform: translateX(-50%); } .cell[class*=poptip--top]::before { top: 0px; } .cell[class*=poptip--top]:hover::before { transform: translateX(0%) translateY(-10px); } .cell[class*=poptip--top]::after { bottom: 100%; margin-bottom: -1px; } .cell[class*=poptip--top]:hover::after { transform: translateX(-50%) translateY(-10px); } .cell[class*=poptip--bottom]::before { bottom: 0; } .cell[class*=poptip--bottom]:hover::before { transform: translateX(0%) translateY(10px); } .cell[class*=poptip--bottom]::after { top: 100%; margin-top: -1px; } .cell[class*=poptip--bottom]:hover::after { transform: translateX(-50%) translateY(10px); } /* left && right */ .cell[class*=poptip--right]::before, .cell[class*=poptip--left]::before { top: calc(50% - 6px); } .cell[class*=poptip--right]::after, .cell[class*=poptip--left]::after { top: 50%; transform: translateY(-50%); } .cell[class*=poptip--right]::before { right: 0; } .cell[class*=poptip--right]:hover::before { transform: translateX(10px) translateY(0%); } .cell[class*=poptip--right]::after { left: 100%; margin-left: -1px; } .cell[class*=poptip--right]:hover::after { transform: translateX(10px) translateY(-50%);; } .cell[class*=poptip--left]::before { left: 0; } .cell[class*=poptip--left]:hover::before { transform: translateX(-10px) translateY(0%); } .cell[class*=poptip--left]::after { right: 100%; margin-right: -1px; } .cell[class*=poptip--left]:hover::after { transform: translateX(-10px) translateY(-50%);; } top-left top top-right left right bottom-left bottom bottom-right 浏览器支持 "},"section4/polygon.html":{"url":"section4/polygon.html","title":"其他多边形","keywords":"","body":"其他多边形 背景知识: box-sizing, transform *{ box-sizing: border-box; } #demo{ width: 100%; padding: 60px 0; display: flex; justify-content: center; align-items: center; flex-wrap: wrap; } #demo > div.item{ min-width: 199px; height: 200px; padding: 20px; border: 1px solid #f5f5f5; flex: 1; display: flex; justify-content: center; align-items: center; } #demo > div.item:not(:nth-child(3n)):not(:last-child){ border-right-width:0; } #demo .item > div { box-sizing: content-box; } .trapezoid { width: 80px; height: 0; border: 40px solid #fff; border-top: 0 solid; border-bottom: 80px solid #b4a078; } .star-5-points { width: 0; height: 0; position: relative; margin: 50px 0; border: 80px solid rgba(0,0,0,0); border-top: 0 solid; border-bottom: 56px solid #b4a078; transform: rotateZ(35deg); } .star-5-points::before { content: \"\"; width: 0; height: 0; position: absolute; top: -36px; left: -52px; border: 24px solid rgba(0,0,0,0); border-top: 0 solid; border-bottom: 64px solid #b4a078; transform: rotateZ(-35deg); } .star-5-points::after { content: \"\"; width: 0; height: 0; position: absolute; top: 3px; left: -86px; border: 80px solid rgba(0,0,0,0); border-top: 0 solid; border-bottom: 56px solid #b4a078; transform: rotateZ(-70deg); } .ribbon { width: 0; height: 80px; border: 40px solid #b4a078; border-top: 0 solid; border-bottom: 28px solid rgba(0,0,0,0); } .diamond { width: 50px; height: 0; position: relative; margin: 20px 0 82px; border: 25px solid rgba(0,0,0,0); border-top-width: 0; border-bottom-color: #b4a078; } .diamond::after { content: \"\"; width: 0; height: 0; position: absolute; top: 25px; left: -25px; border: 50px solid rgba(0,0,0,0); border-top: 70px solid #b4a078; border-bottom-width: 0; } .heart { content: \"\"; display: block; width: 100px; min-height: 80px; position: relative; transform-origin: 50% 50% 0; } .heart:before { content: \"\"; display: block; width: 50px; height: 80px; position: absolute; top: 0; left: 50px; border-radius: 50px 50px 0 0; background: #b4a078; transform: rotateZ(-45deg); transform-origin: 0 100% 0; } .heart:after { content: \"\"; display: block; width: 50px; height: 80px; position: absolute; top: 0; left: 0; border-radius: 50px 50px 0 0; background: #b4a078; transform: rotateZ(45deg); transform-origin: 100% 100% 0; } .army-chevron { width: 200px; height: 60px; position: relative; margin: 0 0 6px; padding: 12px; text-align: center; } .army-chevron::before { content: \"\"; width: 51%; height: 100%; position: absolute; top: 0; left: 0; background: #b4a078; transform: skewY(6deg); } .army-chevron::after { content: \"\"; width: 50%; height: 100%; position: absolute; top: 0; right: 0; background: #b4a078; transform: skewY(-6deg); } 浏览器支持 "}}